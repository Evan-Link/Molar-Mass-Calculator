function parseFormula(str)
    local startTime = os.clock()
    
    str = str:gsub("[^A-Za-z0-9]", "") -- Remove all invalid chars
    
    str = str .. "\0"
    
    local pos = 1
    local parts, current, done = {}, 1
    while pos < str:len() and os.clock() <= startTime + 3 do
        local begPart = str:sub(pos, pos + 1)
        if begPart:find("%u%d") then -- CHAR digit+
            
            local next = str:find("%u", pos + 1)
            
            if not next then 
                next = str:find("\0", pos + 1) 
            end
            
            part = str:sub(pos, pos)
            count = str:sub(pos + 1, next - 1)
            
            parts[current] = {part, count}
            
            pos = next
            current = current + 1
            
        elseif begPart:find("%u%l") then
            
            local next = str:find("%u", pos + 2)
            
            if not next then 
                next = str:find("\0", pos + 2) 
            end
            
            part = str:sub(pos, pos + 1)
            count = str:sub(pos + 2, next - 1)
            
            parts[current] = {part, count}
            
            pos = next
            current = current + 1
            
        elseif begPart:find("%u%u") then
            
            part = str:sub(pos, pos)
            
            parts[current] = {part, ""}
            
            pos = pos + 1
            current = current + 1 
            
        elseif begPart:find("(%u)\0") then
            
            part = str:sub(pos, pos)
            
            parts[current] = {part, ""}
            
            pos = pos + 1
            
        end
    end
    
    return parts
    
end

function loadFormula(form)
    local tbl = parseFormula(form)
    for i, v in ipairs(tbl) do
        elemsTbl[i] = v[1] .. v[2]
    end
    cursor[1] = 1
end
